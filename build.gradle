plugins {
    alias(buildLibs.plugins.android.application) apply false
    alias(buildLibs.plugins.android.library) apply false

    alias(buildLibs.plugins.kotlin.jvm) // not apply false bcz of test {}
    alias(buildLibs.plugins.kotlin.android) apply false
    alias(buildLibs.plugins.ksp) apply false

    alias(buildLibs.plugins.hilt) apply false
    alias(buildLibs.plugins.navigation.safeargs) apply false
    alias(testLibs.plugins.junit5.android) apply false

    alias(buildLibs.plugins.gradle.versions)
}

apply from: 'buildFeatures.gradle'
apply from: 'components.gradle'
apply from: 'configs.gradle'
apply from: 'bundles.gradle'

ext {
    sdk = 33
    minSdk = 26
    buildTools = '33.0.1'

    versionCode = 1
    versionName = '1.0'
}

tasks.register("cleanBaselines") {
    def baselineFile = "/lint-baseline.xml"
    rootProject.allprojects.forEach(project -> {
        if (project.subprojects.isEmpty()) {//size() == 0) {
            println(project.projectDir.path)
            delete project.projectDir.path + baselineFile
        }
    })
}

test {
    useJUnitPlatform()
}


tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}
